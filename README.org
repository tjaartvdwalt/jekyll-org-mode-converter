#+OPTIONS: toc:t
* jekyll-org-mode-converter
** Motivation
I love Emacs [[http://orgmode.org/][Org mode]]. I try to write all my documents in Org mode and export them everywhere. Unfortunately Org mode's default html output is rather plain.
Enter *[[http://jekyllrb.com/][Jekyll]]*. Jekyll makes deploying static websites fun and pretty.

** Other solutions
I searched for a solution to merge these two technologies and found [[https://github.com/eggcaker/jekyll-org][jekyll-org]]
While this seems like a great project, it has some problems:
- It is not compatible with recent versions of Org mode
- The workflow seems pretty complex.

To convert your documents you need to run a separate make file that invokes some elisp, to convert your org files to html, it then invokes jekyll in a sub directory on the converted html to build your jekyll site. 

While I understand that hacking Elisp seems like the appropriate course of action for the experienced Emacs user in any scenario, 
I don't believe *every problem* is best solved by hacking Elisp.

** Our approach
I decided to approach the problem from a Jekyll point of view. I wanted to use the standard Jekyll workflow, only with Org mode files instead of markdown.  

Luckily jekyll makes it easy to write a [[http://jekyllrb.com/docs/plugins/#converters][converter]] for a new markup language. To make the job even easier there already exists a ruby based
org-to-html converter [[https://github.com/bdewey/org-ruby][org-ruby]]. Org-ruby is what Github uses to render Org mode files, like this README to html. 


** How to use the converter
*** Short version
For experienced Jekyll users, you need to do 2 things to get ~jekyll-org-mode-converter~ to work
- Install the gem
- Include the gem in your ~_config.yml~

*** Long version
To  use ~jekyll-org-mode-converter~ with Jekyll, you need to have Ruby RubyGems and Jekyll installed. See  how to do that [[http://jekyllrb.com/docs/installation/][here]].

Create a new Jekyll project ~my-site~ run
#+begin_src bash
jekyll new my-site
#+end_src

Create a Gemfile in the root of the project, and add at least the following line
#+begin_src ruby
source 'https://rubygems.org'

gem 'jekyll' , '>= 2.5.3'
gem 'jekyll-org-mode-converter' , '>= 0.1.1'
#+end_src

Install the gems with bundler
#+begin_src bash
bundle install
#+end_src


To use the new converter add the following line to your ~_config.yml~
#+begin_src ruby
gems: [jekyll-org-mode-converter]
#+end_src

Now write your jekyll posts in Org mode!

To build your site run
#+begin_src bash
bundle exec jekyll build
#+end_src

and to serve your site run
#+begin_src ruby
bundle exec jekyll serve
#+end_src


** Deploying to Github
One of the cool features of Jekyll is that you can deploy Jekyll websites to Github by simply committing the Jekyll code
to your git repository. Unfortunately Github does not allow you to run custom plugins for [[http://jekyllrb.com/docs/plugins/][security reasons]].
This implies that to use [[https://help.github.com/articles/using-jekyll-with-pages/][Jekyll with GitHub Pages]] you ideally need to write posts in Markdown. But you love org-mode and you don't want to learn yet another markup language. 

Luckily all is not lost, but you will need to build your site locally and push your static pages to GitHub.
To keep everything tidy I organize my git repository in the following way

#+begin_src
.
|
|-- src          (the root of my jekyll project)
|
|-- www          (resulting site goes here)
|
|-- index.html   (redirects to www/index.html)
#+end_src


You will need to configure the custom destination directory by adding the following line in your ~_config.yml~
#+begin_src ruby
destination: ../www
#+end_src

Create ~index.html~ with the following content
#+begin_src html
<html>
<meta http-equiv="refresh" content="0; url=www" />
</html>
#+end_src

Run ~jekyll build~ on the ~src~ directory and push the results to GitHub.



** Example
I run my personal website on Github using the technique described above. You can look at the code [[http://tjaartvdwalt.github.io/][here]].

** Contributing to jekyll-org-mode-converter
 
- Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
- Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
- Fork the project.
- Start a feature/bugfix branch.
- Commit and push until you are happy with your contribution.
- Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
- Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

** Copyright

Copyright (c) 2015 Tjaart van der Walt. See LICENSE.txt for
further details.

